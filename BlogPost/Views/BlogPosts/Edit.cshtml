@model NovaBlog.Models.BlogPost
@using NovaBlog.Enums
@using NovaBlog.Services.Interfaces

@inject IImageService _ImageService

@{
    ViewData["Title"] = "Edit";
    //Layout = null;
}

<link rel="stylesheet" type="text/css" href="~/ckeditor5/sample/styles.css" />

<h1>Edit</h1>

<h4>BlogPost</h4>
<hr />
<div class="post-single-wrapper axil-section-gap bg-color-white">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 offset-lg-2">
                <div class="axil-comment-area">
                    <div class="row text-center">
                        <div class="col-md-12 text-centered">
                            <div class="text-center">
                                <div class="row">
                                    <div class="col-md-12">
                                        <form asp-action="Edit" enctype="multipart/form-data">
                                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                            <input type="hidden" asp-for="Id" />
                                            <input type="hidden" asp-for="Created" />
                                            <input type="hidden" asp-for="LastUpdated" />
                                            <input type="hidden" asp-for="Slug" />
                                            <input type="hidden" asp-for="ImageData" />
                                            <input type="hidden" asp-for="ImageType" />
                                            <div class="form-group">
                                                <label asp-for="Title" class="control-label"></label>
                                                <input asp-for="Title" class="form-control" />
                                                <span asp-validation-for="Title" class="text-danger"></span>
                                            </div>
                                            <div class="form-group">
                                                <label asp-for="Contnet" class="control-label">Content</label>
                                                <textarea asp-for="Contnet" class="form-control" id="editor" rowls="7"></textarea>
                                                <span asp-validation-for="Contnet" class="text-danger"></span>
                                            </div>
                                            <div class="form-group">
                                                <label asp-for="CategoryId" class="control-label"></label>
                                                <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.CategoryId"></select>
                                                <span asp-validation-for="CategoryId" class="text-danger"></span>
                                            </div>
                                            <div class="form-group">
                                                <label asp-for="Abstract" class="control-label"></label>
                                                <input asp-for="Abstract" class="form-control" />
                                                <span asp-validation-for="Abstract" class="text-danger"></span>
                                            </div>
                                            <div class="form-group">
                                                <label asp-for="Tags" class="form-label">Tags</label>
                                                <select multiple name="TagList" class="form-control" asp-items="ViewBag.TagList"></select>
                                            </div>
                                            <div class="form-group form-check">
                                                <label class="form-check-label">
                                                    <input class="form-check-input" asp-for="IsDeleted" /> @Html.DisplayNameFor(model => model.IsDeleted)
                                                </label>
                                            </div>
                                            <div class="form-group form-check">
                                                <label class="form-check-label">
                                                    <input class="form-check-input" asp-for="IsPublished" /> @Html.DisplayNameFor(model => model.IsPublished)
                                                </label>
                                            </div>
                                            <div class="form-group form-check">
                                                <label asp-for="BlogPostImage" class="control-label"></label>
                                                <input asp-for="BlogPostImage" class="form-control" accept=".png,.jpg,.jpeg,.gif"
                                                       onchange="document.getElementById('contactImage').src = window.URL.createObjectURL(this.files[0])">
                                                <span asp-validation-for="BlogPostImage" class="text-danger"></span>
                                            </div>
                                            <div class="col col-md-4">
                                                @if (Model.ImageData != null)
                                                {
                                                    <img id="imageData" class="img-fluid img-thumbnail" style="width:100px;height:80px" src="@_ImageService.ConvertByteArrayToFile(Model.ImageData,Model.ImageType!,(int)DefaultImage.BlogPost)" />
                                                }
                                            </div>
                                            <span asp-validation-for="BlogPostImage" class="text-danger"></span>
                                            <div class="form-group">
                                                <input type="submit" value="Save" class="btn btn-primary" />
                                            </div>
                                        </form>
                                    </div>
                                </div>

                                <div>
                                    <a asp-action="Index">Back to List</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script src="~/ckeditor5/build/ckeditor.js"></script>
    <script src="https://cdn.ckeditor.com/ckeditor5/35.0.1/super-build/ckeditor.js"></script>
    <script>
        CKEDITOR.ClassicEditor.create(document.getElementById("editor"), {
            toolbar: {
                items: [
                    'heading', '|',
                    'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor', 'highlight', '|',
                    'bold', 'italic', 'strikethrough', 'underline', 'code', 'removeFormat', '|',
                    'bulletedList', 'numberedList', 'todoList', '|',
                    'outdent', 'indent', 'alignment', '|',
                    'undo', 'redo',
                    '-',
                    'link', 'insertImage', 'blockQuote', 'insertTable', 'mediaEmbed', 'codeBlock', 'htmlEmbed', '|',
                    'specialCharacters', 'horizontalLine', 'pageBreak', '|',
                ],
                shouldNotGroupWhenFull: true
            },
            list: {
                properties: {
                    styles: true,
                    startIndex: true,
                    reversed: true
                }
            },
            heading: {
                options: [
                    { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },
                    { model: 'heading1', view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },
                    { model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' },
                    { model: 'heading3', view: 'h3', title: 'Heading 3', class: 'ck-heading_heading3' },
                    { model: 'heading4', view: 'h4', title: 'Heading 4', class: 'ck-heading_heading4' },
                    { model: 'heading5', view: 'h5', title: 'Heading 5', class: 'ck-heading_heading5' },
                    { model: 'heading6', view: 'h6', title: 'Heading 6', class: 'ck-heading_heading6' }
                ]
            },
            fontFamily: {
                options: [
                    'default',
                    'Arial, Helvetica, sans-serif',
                    'Courier New, Courier, monospace',
                    'Georgia, serif',
                    'Lucida Sans Unicode, Lucida Grande, sans-serif',
                    'Tahoma, Geneva, sans-serif',
                    'Times New Roman, Times, serif',
                    'Trebuchet MS, Helvetica, sans-serif',
                    'Verdana, Geneva, sans-serif'
                ],
                supportAllValues: true
            },
            fontSize: {
                options: [10, 12, 14, 'default', 18, 20, 22],
                supportAllValues: true
            },
            htmlSupport: {
                allow: [
                    {
                        name: /.*/,
                        attributes: true,
                        classes: true,
                        styles: true
                    }
                ]
            },
            htmlEmbed: {
                showPreviews: true
            },
            link: {
                decorators: {
                    addTargetToExternalLinks: true,
                    defaultProtocol: 'https://',
                    toggleDownloadable: {
                        mode: 'manual',
                        label: 'Downloadable',
                        attributes: {
                            download: 'file'
                        }
                    }
                }
            },
            removePlugins: [
                'textPartLanguage',
                'sourceEditing',
                'subscript',
                'superscript',
                'selectAll',
                'findAndReplace',
                'exportWord',
                'exportPDF',
                'CKBox',
                'CKFinder',
                'EasyImage',
                'RealTimeCollaborativeComments',
                'RealTimeCollaborativeTrackChanges',
                'RealTimeCollaborativeRevisionHistory',
                'PresenceList',
                'Comments',
                'TrackChanges',
                'TrackChangesData',
                'RevisionHistory',
                'Pagination',
                'WProofreader',
                'MathType'
            ]
        });
    </script>

        }
